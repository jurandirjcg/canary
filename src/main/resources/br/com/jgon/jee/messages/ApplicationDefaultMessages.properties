
daoutil-collection = Campo {0} n\uFFFDo \uFFFD inst\uFFFDncia de Collection

default.message = Ocorreu um erro inesperado. Contacte o administrador do sistema.

error.collection-instance     = Classe {0} n\u00E3o pode ser instanciada como objeto Collection, Set ou List
error.contenttype             = Content Type invalido {0}
error.criteria                = Erro ao obter CriteriaManager para a entidade {0}
error.field-does-not-exist    = Atributo {0} n\u00E3o encontrado na classe {1}
error.field.access            = Erro ao acessar atributo {0} da classe {1}
error.find                    = Erro ao obter entidade {0}
error.find-list               = Erro ao obter lista de {0}
error.instance                = Erro ao instanciar o objeto {0}
error.instantiation           = Erro ao instanciar a classe {0}
error.link-builder            = Erro ao gerar link para a response
error.pagination-path.invalid = Erro ao atribuir nome para a cole\u00E7\u00E3o de retorno
error.parse-date              = Erro ao converter string {0} para data
error.regex-between           = Erro ao processar valor ({0}) com condicao BETWEEN
error.regex-config            = Valor {0} \u00E9 inv\u00E1lido para o campo {1}
error.remove                  = Erro ao remover entidade {0}
error.request-converter       = Erro ao converter informa\u00E7\u00F5es da requisi\u00E7\u00E3o
error.response-converter      = Erro ao converter informa\u00E7\u00F5es da resposta
error.save                    = Erro salvar entidade {0}
error.tree.node               = Erro ao configurar node da \u00E1rvore
error.update                  = Erro ao alterar entidade {0}
error.validation              = Erro ao validar informa\u00E7\u00F5es

genericdao-field-not-found = Entidade [{0}] n\u00E3o possui o atributo [{1}]

genericdao-tuple-alias-not-found = Tuple n\u00E3o possui alias configurado, entidade {0}

link-response.field-not-found = Campo {0} n\uFFFDo encontrado na requisi\uFFFD\uFFFDo

message = {0}

query-mapper.field-collection-not-definied = Favor definir o atributo "targetEntity" da annotation OneToMany ou ManyToMany, ou definir o atributo "collectionTarget" da annotaion QueryAttributeMapper, para o atributo {0}
query-mapper.field-not-found               = Campo {0} n\u00E3o encontrado

validation.greater-than              = Campo {0} maior que {1}
validation.less-than                 = Campo {0} menor que {1}
validation.less-than-or-greater-than = Campo {0} menor que {1} ou maior que {2}
validation.required-field            = Campo {0} obrigat\u00F3rio
validation.required-if-all-not-null  = Campo {0} obrigat\u00F3rio se campos {1} forem diferente de nulos ou vazios
validation.required-if-all-null      = Campo {0} obrigat\u00F3rio se campos {1} forem nulos ou vazios
validation.required-if-any-not-null  = Campo {0} obrigat\u00F3rio se um dos campos {1} for diferente de nulo ou vazio
validation.required-if-any-null      = Campo {0} obrigat\u00F3rio se um dos campos {1} for nulo ou vazio
validation.required-if-not-null      = Campo {0} obrigat\u00F3rio se campo {1} for diferente de nulo ou vazio
validation.required-if-null          = Campo {0} obrigat\u00F3rio se campo {1} for nulo ou vazio
validation.required-reg-ex           = Campo {0} n\u00E3o v\u00E1lido para a express\u00E3o {1}
validation.required-value            = Campo {0} deve possuir o(s) valor(es) ({1})
validation.required-xor              = Somente um dos campos {0} pode possuir valor (campos com valor {1} - campos sem valor {2})
